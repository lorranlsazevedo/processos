"""
Django settings for central_de_processos project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r)v$7qtvj3#zlswwh8@0%70k@%av!312qr=w2w2zboedp^1#p!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'extracao_pdf',
    'dal',
    'dal_select2',
    'tinymce',
    'rest_framework',
    'notifications',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'extracao_pdf.middleware.ProcessoMiddleware',
    'extracao_pdf.middleware.CurrentUserMiddleware',

]

ROOT_URLCONF = 'central_de_processos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'extracao_pdf.context_processors.notifications_count',
            ],
        },
    },
]

WSGI_APPLICATION = 'central_de_processos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE'),
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Atualizando STATICFILES_DIRS para incluir a pasta static correta
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'extracao_pdf', 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Juris Flow",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Juris Flow",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Juris Flow",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "img/logo1.png",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "img/logo.png",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None,

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": None,

    # Welcome text on the login screen
    "welcome_sign": "Bem-vindo ao Juris Flow",

    # Copyright on the footer
    "copyright": "Empretech Soluções Empresariais",

    # List of model admins to search from the search bar, search bar omitted if excluded
    # If you want to use a single search field you dont need to use a list, you can use a simple string
    "search_model": ["extracao_pdf.Processo"],

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": False,

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},

        # external url that opens in a new window (Permissions can be added)
        #{"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},

        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        {"app": "books"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
       # {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
        {"model": "auth.user"}
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": True,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": ["extracao_pdf", "notifications"],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": ["extracao_pdf.Vara",
                    "extracao_pdf.Cidade",
                    "extracao_pdf.ClasseProcessual",
                    "extracao_pdf.Estado",
                    "extracao_pdf.Exequente",
                    "extracao_pdf.Executado",
                    "extracao_pdf.Justica",
                    "extracao_pdf.Leiloeiro",
                    "extracao_pdf.Matricula",
                    "extracao_pdf.Processo",
                    "extracao_pdf.TerceiroInteressado",
                    "extracao_pdf.Leilao",
                    "extracao_pdf.Mymodel",
                    "extracao_pdf.TipoDocumento",
                    "extracao_pdf.Status",
                    "extracao_pdf.Board",
                    "extracao_pdf.List",
                    "extracao_pdf.Card",
                    "extracao_pdf.DataLeilao"],


    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["auth", "books", "books.author", "books.book"],

    # Custom links to append to app groups, keyed on app name

    "custom_links": {
    "extracao_pdf": [
        {
            "name": "Processos",
            "url": "/admin/extracao_pdf/processo/",
            "icon": "fas fa-book-open",
            "permissions": ["extracao_pdf.view_processo"]
        },
        {
            "name": "Kanban",
            "url": "/kanban_list",
            "icon": "fas fa-border-all",
            "permissions": ["extracao_pdf.view_kanban"]
        },
        {
            "name": "Boards",
            "url": "/admin/extracao_pdf/board/",
            "icon": "fas fa-clipboard-list",
            "permissions": ["extracao_pdf.view_board"]
        },
        {
            "name": "Calendário",
            "url": "/calendario",
            "icon": "fas fa-calendar-alt",
            "permissions": ["extracao_pdf.view_leilao"]
        },
        {
            "name": "Cards",
            "url": "/admin/extracao_pdf/card/",
            "icon": "fab fa-flipboard",
            "permissions": ["extracao_pdf.view_card"]
        },
        {
            "name": "Cidades",
            "url": "/admin/extracao_pdf/cidade/",
            "icon": "fas fa-city",
            "permissions": ["extracao_pdf.view_cidade"]
        },
        {
            "name": "Classe Poocessual",
            "url": "/admin/extracao_pdf/classeprocessual/",
            "icon": "fas fa-file-contract",
            "permissions": ["extracao_pdf.view_classeprocessual"]
        },
        {
            "name": "Colunas",
            "url": "/admin/extracao_pdf/list/",
            "icon": "fas fa-server",
            "permissions": ["extracao_pdf.view_list"]
        },
        {
            "name": "Destinatários",
            "url": "/admin/extracao_pdf/notificationrecipient/",
            "icon": "fas fa-paper-plane",
        },
        #{
        #    "name": "Estados",
        #    "url": "/admin/extracao_pdf/estado/",
        #    "icon": "fas fa-flag-usa",
        #    "permissions": ["extracao_pdf.view_estado"]
        #},
        {
            "name": "Exequente",
            "url": "/admin/extracao_pdf/exequente/",
            "icon": "fas fa-user-alt",
            "permissions": ["extracao_pdf.view_exequente"]
        },
        {
            "name": "Executado",
            "url": "/admin/extracao_pdf/executado/",
            "icon": "fas fa-user-alt",
            "permissions": ["extracao_pdf.view_executado"]
        },
        {
            "name": "Frases padrões",
            "url": "/admin/extracao_pdf/frasepadrao/",
            "icon": "fas fa-align-justify",
        },
        {
            "name": "Grupos responsáveis",
            "url": "/admin/extracao_pdf/gruporesponsavel/",
            "icon": "fas fa-user-friends",
        },
        {
            "name": "Justiças",
            "url": "/admin/extracao_pdf/justica/",
            "icon": "fas fa-balance-scale",
            "permissions": ["extracao_pdf.view_justica"]
        },
        {
            "name": "Leiloeiros",
            "url": "/admin/extracao_pdf/leiloeiro/",
            "icon": "fas fa-user-tie",
            "permissions": ["extracao_pdf.view_leiloeiro"]
        },
        {
            "name": "Leilões",
            "url": "/admin/extracao_pdf/leilao/",
            "icon": "fas fa-gavel",
            "permissions": ["extracao_pdf.view_leilao"]
        },
        {
            "name": "Logs de e-mail",
            "url": "/admin/extracao_pdf/emaillog/",
            "icon": "fas fa-envelope-square",
        },
        {
            "name": "Matrículas",
            "url": "/admin/extracao_pdf/matricula/",
            "icon": "far fa-address-card",
            "permissions": ["extracao_pdf.view_matricula"]
        },
        {
            "name": "Modelos",
            "url": "/admin/extracao_pdf/mymodel/",
            "icon": "fas fa-file-word",
            "permissions": ["extracao_pdf.view_mymodel"]
        },
        {
            "name": "Relatórios",
            "url": "/dashboard2/",
            "icon": "fas fa-file-pdf",
            "permissions": ["extracao_pdf.view_relatorio"]
        },
        {
            "name": "Templates de e-mail",
            "url": "/admin/extracao_pdf/emailtemplate/",
            "icon": "fas fa-envelope-square",
        },
        {
            "name": "Terceiros Interessados",
            "url": "/admin/extracao_pdf/terceirointeressado/",
            "icon": "fas fa-users",
            "permissions": ["extracao_pdf.view_terceirointeressado"]
        },
        {
            "name": "Tipos de anexos",
            "url": "/admin/extracao_pdf/tipoanexo/",
            "icon": "fas fa-paperclip",
        },
        {
            "name": "Tipos documentos",
            "url": "/admin/extracao_pdf/tipodocumento/",
            "icon": "far fa-folder",
            "permissions": ["extracao_pdf.view_tipodocumento"]
        },
        {
            "name": "Varas",
            "url": "/admin/extracao_pdf/vara/",
            "icon": "fas fa-balance-scale",
            "permissions": ["extracao_pdf.view_vara"]
        },
    ]
},



    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": None,
    "custom_js": ["js/admin_custom.js"],
    # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)
    "use_google_fonts_cdn": True,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "single",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
    # Add a language dropdown into the admin
    #"language_chooser": True,
}

TINYMCE_DEFAULT_CONFIG = {
    'height': 1000,
    'width': 600,
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 10,
    'selector': 'textarea',
    'plugins': 'link image code textcolor table advtable lists fullscreen preview',
    'toolbar': 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | table | code | fullscreen | preview | insertPlaceholder insertIndent',
    'valid_elements': 'p[style],strong,em,span[style],a[href|title],ul,ol,li,br,img[src|alt|title],table,tr,td,th',
    'paste_as_text': True,
    'paste_word_valid_elements': 'b,strong,i,em,h1,h2',
    'automatic_uploads': False,
    'menubar': 'file edit view insert format tools table help',
    'statusbar': True,
    'image_advtab': True,
    'content_style': "body { font-family: Arial, sans-serif; }",
    'font_family_formats': 'Arial',
    'setup': """function(editor) {
        editor.ui.registry.addButton('insertIndent', {
            text: 'Indent Paragraph',
            icon: 'indent',  // Pode usar um ícone apropriado
            onAction: function() {
                // Pega o conteúdo do parágrafo atual e aplica o estilo de indentação
                let selectedNode = editor.selection.getNode();
                if (selectedNode.nodeName === 'P') {
                    editor.dom.setStyle(selectedNode, 'text-indent', '30px');
                }
            }
        });
        editor.ui.registry.addMenuButton('insertPlaceholder', {
            text: 'Insert Placeholder',
            fetch: function(callback) {
                var items = [
                    {
                        type: 'menuitem',
                        text: 'Avaliação Total',
                        onAction: function() {
                            editor.insertContent('{{avaliacao_total}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Bens do Processo',
                        onAction: function() {
                            editor.insertContent('{{descricao_bens}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Bens do Processo (somente descrição)',
                        onAction: function() {
                            editor.insertContent('{{descricao_somente_bens}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Cidade da Vara',
                        onAction: function() {
                            editor.insertContent('{{cidade_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Cidade da Vara (Maiúsculo)',
                        onAction: function() {
                            editor.insertContent('{{cidade_vara_maiusculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Cidade Leiloeiro',
                        onAction: function() {
                            editor.insertContent('{{cidade_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Classe Processual',
                        onAction: function() {
                            editor.insertContent('{{classe}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Comissão',
                        onAction: function() {
                            editor.insertContent('{{comissao}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Data de Hoje',
                        onAction: function() {
                            editor.insertContent('{{data_hoje}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Datas do Leilão',
                        onAction: function() {
                            editor.insertContent('{{datas_leilao}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Datas do Leilão com Complemento',
                        onAction: function() {
                            editor.insertContent('{{datas_leilao_complemento}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Depositário',
                        onAction: function() {
                            editor.insertContent('{{depositario}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Email Leiloeiro',
                        onAction: function() {
                            editor.insertContent('{{email_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Email Vara',
                        onAction: function() {
                            editor.insertContent('{{email_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Endereço Vara',
                        onAction: function() {
                            editor.insertContent('{{endereco_completo_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Estado Vara',
                        onAction: function() {
                            editor.insertContent('{{estado_completo_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Estado Vara (MAIÚSCULO)',
                        onAction: function() {
                            editor.insertContent('{{estado_completo_vara_maiusculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Executados',
                        onAction: function() {
                            editor.insertContent('{{executados}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Frase padrão imóvel',
                        onAction: function() {
                            editor.insertContent('{{frase_imovel}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Frase padrão veículo',
                        onAction: function() {
                            editor.insertContent('{{frase_veiculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Insert Line Break',
                        onAction: function() {
                            editor.insertContent('<br class="forced-break">');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Justiça',
                        onAction: function() {
                            editor.insertContent('{{justica}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Justiça (Maiúsculo)',
                        onAction: function() {
                            editor.insertContent('{{justica_maiusculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Lance Mínimo',
                        onAction: function() {
                            editor.insertContent('{{lance_minimo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Leiloeiro ou Leiloeira',
                        onAction: function() {
                            editor.insertContent('{{titulo_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Artigo Leiloeiro(a)',
                        onAction: function() {
                            editor.insertContent('{{artigo_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Este(a) Leiloeiro(a)',
                        onAction: function() {
                            editor.insertContent('{{pronome_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'este(a) Leiloeiro(a)',
                        onAction: function() {
                            editor.insertContent('{{pronome_leiloeiro_min}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'deste(a) Leiloeiro(a)',
                        onAction: function() {
                            editor.insertContent('{{deste_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'a ou o p/ Leiloeiro(a)',
                        onAction: function() {
                            editor.insertContent('{{artigo_simples}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Localização bens',
                        onAction: function() {
                            editor.insertContent('{{localizacao_bens}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Modalidade do Leilão',
                        onAction: function() {
                            editor.insertContent('{{modalidade}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome da Vara',
                        onAction: function() {
                            editor.insertContent('{{nome_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome da Vara (MAIÚSCULAS)',
                        onAction: function() {
                            editor.insertContent('{{nome_vara_maiusculas}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome do Executado',
                        onAction: function() {
                            editor.insertContent('{{nome_executado}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome do Exequente',
                        onAction: function() {
                            editor.insertContent('{{nome_exequente}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome do Juiz',
                        onAction: function() {
                            editor.insertContent('{{nome_exequente}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome do Leiloeiro',
                        onAction: function() {
                            editor.insertContent('{{nome_leiloeiro}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Nome do Leiloeiro (MAIÚSCULO)',
                        onAction: function() {
                            editor.insertContent('{{nome_leiloeiro_maiusculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Número da Matrícula',
                        onAction: function() {
                            editor.insertContent('{{numero_matricula}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Endereço da Matrícula',
                        onAction: function() {
                            editor.insertContent('{{endereco_matricula}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Número do Processo',
                        onAction: function() {
                            editor.insertContent('{{numero_processo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Ônus',
                        onAction: function() {
                            editor.insertContent('{{onus}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Preço Vil',
                        onAction: function() {
                            editor.insertContent('{{preco_vil}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Primeiro Leilão',
                        onAction: function() {
                            editor.insertContent('{{data_leilao_1}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Segundo Leilão',
                        onAction: function() {
                            editor.insertContent('{{data_leilao_2}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Site',
                        onAction: function() {
                            editor.insertContent('{{site}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Telefone Vara',
                        onAction: function() {
                            editor.insertContent('{{telefone_vara}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Texto de Venda Direta',
                        onAction: function() {
                            editor.insertContent('{{vendadireta_texto}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Título Juiz',
                        onAction: function() {
                            editor.insertContent('{{titulo_juiz}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Título Juiz (MAIÚSCULO)',
                        onAction: function() {
                            editor.insertContent('{{titulo_juiz_maiusculo}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'UF',
                        onAction: function() {
                            editor.insertContent('{{uf}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Valor da Dívida',
                        onAction: function() {
                            editor.insertContent('{{valor_divida}}');
                        }
                    },
                    {
                        type: 'menuitem',
                        text: 'Fls. da Dívida',
                        onAction: function() {
                            editor.insertContent('{{fls_divida}}');
                        }
                    }
                ];
                callback(items);
            }
        });
    }"""
}


EMAIL_BACKEND = os.getenv('EMAIL_BACKEND')
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT'))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS') == 'True'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')

SITE_URL = 'http://127.0.0.1:8000'  # URL local para desenvolvimento
# Em produção, altere isso para o domínio real
# SITE_URL = 'https://www.seudominio.com'